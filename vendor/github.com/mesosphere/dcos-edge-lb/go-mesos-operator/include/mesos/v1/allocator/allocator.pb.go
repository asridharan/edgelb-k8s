// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/mesosphere/dcos-edge-lb/go-mesos-operator/include/mesos/v1/allocator/allocator.proto

/*
Package mesos_v1_allocator is a generated protocol buffer package.

It is generated from these files:
	github.com/mesosphere/dcos-edge-lb/go-mesos-operator/include/mesos/v1/allocator/allocator.proto

It has these top-level messages:
	InverseOfferStatus
*/
package mesos_v1_allocator

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import mesos_v1 "github.com/mesosphere/dcos-edge-lb/go-mesos-operator/include/mesos/v1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InverseOfferStatus_Status int32

const (
	// We have not received a response yet. This is the default state before
	// receiving a response.
	InverseOfferStatus_UNKNOWN InverseOfferStatus_Status = 1
	// The framework is ok with the inverse offer. This means it will not
	// violate any SLAs and will attempt to evacuate any tasks running on the
	// agent. If the tasks are not evacuated by the framework, the operator can
	// manually shut down the slave knowing that the framework will not have
	// violated its SLAs.
	InverseOfferStatus_ACCEPT InverseOfferStatus_Status = 2
	// The framework wants to block the maintenance operation from happening. An
	// example would be that it cannot meet its SLA by losing resources.
	InverseOfferStatus_DECLINE InverseOfferStatus_Status = 3
)

var InverseOfferStatus_Status_name = map[int32]string{
	1: "UNKNOWN",
	2: "ACCEPT",
	3: "DECLINE",
}
var InverseOfferStatus_Status_value = map[string]int32{
	"UNKNOWN": 1,
	"ACCEPT":  2,
	"DECLINE": 3,
}

func (x InverseOfferStatus_Status) Enum() *InverseOfferStatus_Status {
	p := new(InverseOfferStatus_Status)
	*p = x
	return p
}
func (x InverseOfferStatus_Status) String() string {
	return proto.EnumName(InverseOfferStatus_Status_name, int32(x))
}
func (x *InverseOfferStatus_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InverseOfferStatus_Status_value, data, "InverseOfferStatus_Status")
	if err != nil {
		return err
	}
	*x = InverseOfferStatus_Status(value)
	return nil
}
func (InverseOfferStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// *
// Describes the status of an inverse offer.
//
// This is a protobuf so as to be able to share the status to inverse offers
// through endpoints such as the maintenance status endpoint.
type InverseOfferStatus struct {
	Status      *InverseOfferStatus_Status `protobuf:"varint,1,req,name=status,enum=mesos.v1.allocator.InverseOfferStatus_Status" json:"status,omitempty"`
	FrameworkId *mesos_v1.FrameworkID      `protobuf:"bytes,2,req,name=framework_id,json=frameworkId" json:"framework_id,omitempty"`
	// Time, since the epoch, when this status was last updated.
	Timestamp        *mesos_v1.TimeInfo `protobuf:"bytes,3,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *InverseOfferStatus) Reset()                    { *m = InverseOfferStatus{} }
func (m *InverseOfferStatus) String() string            { return proto.CompactTextString(m) }
func (*InverseOfferStatus) ProtoMessage()               {}
func (*InverseOfferStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InverseOfferStatus) GetStatus() InverseOfferStatus_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return InverseOfferStatus_UNKNOWN
}

func (m *InverseOfferStatus) GetFrameworkId() *mesos_v1.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *InverseOfferStatus) GetTimestamp() *mesos_v1.TimeInfo {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*InverseOfferStatus)(nil), "mesos.v1.allocator.InverseOfferStatus")
	proto.RegisterEnum("mesos.v1.allocator.InverseOfferStatus_Status", InverseOfferStatus_Status_name, InverseOfferStatus_Status_value)
}

func init() {
	proto.RegisterFile("github.com/mesosphere/dcos-edge-lb/go-mesos-operator/include/mesos/v1/allocator/allocator.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x8e, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x69, 0x0a, 0x15, 0x37, 0x22, 0x61, 0x41, 0x08, 0x9e, 0x4a, 0x4f, 0xbd, 0x64, 0xd7,
	0xf6, 0xe4, 0x55, 0xd2, 0x08, 0x41, 0x49, 0x35, 0x56, 0x3c, 0x96, 0x34, 0x99, 0xa4, 0xc1, 0x6c,
	0x26, 0xec, 0x6e, 0xe2, 0x4f, 0xf7, 0x2a, 0x6e, 0x6a, 0x72, 0xe8, 0xd5, 0xd3, 0x0c, 0x7c, 0xef,
	0x9b, 0x79, 0x64, 0x5f, 0x94, 0xfa, 0xd8, 0x1e, 0x58, 0x8a, 0x82, 0x0b, 0x50, 0xa8, 0x9a, 0x23,
	0x48, 0xe0, 0x59, 0x8a, 0xca, 0x83, 0xac, 0x00, 0xaf, 0x3a, 0xf0, 0x02, 0x3d, 0x83, 0x3c, 0x6c,
	0x40, 0x26, 0x1a, 0x25, 0x2f, 0xeb, 0xb4, 0x6a, 0x33, 0xe8, 0x0d, 0xde, 0xad, 0x78, 0x52, 0x55,
	0x98, 0x1a, 0x34, 0x6c, 0xac, 0x91, 0xa8, 0x91, 0x52, 0x93, 0x61, 0xdd, 0x8a, 0x0d, 0xe4, 0xf6,
	0xf5, 0x7f, 0x9e, 0xf6, 0x97, 0xcd, 0x9b, 0xc5, 0xf7, 0x84, 0xd0, 0xb0, 0xee, 0x40, 0x2a, 0xd8,
	0xe6, 0x39, 0xc8, 0x37, 0x9d, 0xe8, 0x56, 0xd1, 0x80, 0xcc, 0x94, 0xd9, 0xdc, 0xc9, 0xdc, 0x5a,
	0x5e, 0xaf, 0x3d, 0x76, 0x5e, 0x87, 0x9d, 0x7b, 0xac, 0x1f, 0xf1, 0x49, 0xa6, 0xf7, 0xe4, 0x2a,
	0x97, 0x89, 0x80, 0x2f, 0x94, 0x9f, 0xfb, 0x32, 0x73, 0xad, 0xb9, 0xb5, 0xb4, 0xd7, 0x37, 0xe3,
	0xb1, 0xc7, 0x3f, 0x1a, 0x6e, 0x62, 0x7b, 0x88, 0x86, 0x19, 0xbd, 0x23, 0x97, 0xba, 0x14, 0xa0,
	0x74, 0x22, 0x1a, 0x77, 0x6a, 0x34, 0x3a, 0x6a, 0xbb, 0x52, 0x40, 0x58, 0xe7, 0x18, 0x8f, 0xa1,
	0x05, 0x23, 0xb3, 0x53, 0x79, 0x9b, 0x5c, 0xbc, 0x47, 0x4f, 0xd1, 0xf6, 0x23, 0x72, 0x26, 0x94,
	0x90, 0xd9, 0x83, 0xef, 0x07, 0x2f, 0x3b, 0xc7, 0xfa, 0x05, 0x9b, 0xc0, 0x7f, 0x0e, 0xa3, 0xc0,
	0x99, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xf8, 0x52, 0x5c, 0xc2, 0x01, 0x00, 0x00,
}
