// go-bindata only lets you pass in directories...
//go:generate go-bindata -o ./reference_bindata.go -pkg commands -prefix ../../../../../apiserver/spec/data ../../../../../apiserver/spec/data

package commands

import (
	"bytes"
	"encoding/json"
	"io/ioutil"

	"github.com/go-openapi/swag"
)

func reference() ([]byte, error) {
	// This is generated by go-bindata
	return Asset("swagger.json")
}

func loadAsJSONBytes(path string) ([]byte, error) {
	// Check for yaml / yml extension, otherwise assume json
	if swag.YAMLMatcher(path) {
		return yamlFileToJSON(path)
	}
	return ioutil.ReadFile(path)
}

func yamlFileToJSON(path string) (json.RawMessage, error) {
	b, bErr := ioutil.ReadFile(path)
	if bErr != nil {
		return nil, bErr
	}
	yaml, yamlErr := swag.BytesToYAMLDoc(b)
	if yamlErr != nil {
		return nil, yamlErr
	}
	return swag.YAMLToJSON(yaml)
}

func prettyLoadBytes(path string) ([]byte, error) {
	jsonB, jsonBErr := loadAsJSONBytes(path)
	if jsonBErr != nil {
		return nil, jsonBErr
	}

	var outBuf bytes.Buffer
	if err := json.Indent(&outBuf, jsonB, "", "  "); err != nil {
		return nil, err
	}
	return outBuf.Bytes(), nil
}
