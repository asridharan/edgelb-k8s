{
    "type":"object",
    "properties":{
        "service":{
            "type":"object",
            "description": "DC/OS service configuration properties",
            "properties":{
                "name" : {
                    "description":"The name of the service instance",
                    "type":"string"
                },
                "namespace": {
                    "description": "The namespace for this service instance",
                    "type": "string"
                },
                "specFile" : {
                    "description":"The name of the service spec yaml file.",
                    "type":"string",
                    "default":"svc.yml"
                },
                "cmdPrefix" : {
                    "description":"A generic prefix to start the scheduler.",
                    "type":"string",
                    "default":"export LD_LIBRARY_PATH=$MESOS_SANDBOX/libmesos-bundle/lib:$LD_LIBRARY_PATH; export MESOS_NATIVE_JAVA_LIBRARY=$(ls $MESOS_SANDBOX/libmesos-bundle/lib/libmesos-*.so); export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/); export JAVA_HOME=${JAVA_HOME%/}; export PATH=$(ls -d $JAVA_HOME/bin):$PATH && export JAVA_OPTS=\"-Xms256M -Xmx512M -XX:-HeapDumpOnOutOfMemoryError\""
                },
                "secretName": {
                    "description":"Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
                    "type":"string",
                    "default":""
                },
                "user": {
                    "description": "The user that the service will run as.",
                    "type": "string",
                    "default": "root"
                },
                "principal": {
                    "description": "The principal for the service instance.",
                    "type": "string",
                    "default": ""
                }
            }
        },
        "edgelbPool":{
            "description":"Template pod configuration properties",
            "type":"object",
            "properties":{
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "count": {
                    "title": "Node count",
                    "description": "Number of Template pods to run",
                    "type": "integer"
                },
                "placementConstraint": {
                    "title": "Placement constraint",
                    "description": "Marathon-style placement constraint for nodes. Public example: 'public_ip:CLUSTER:true,hostname:UNIQUE'",
                    "type": "string"
                },
                "cpus": {
                    "title": "CPU count",
                    "description": "Template pod CPU requirements",
                    "type": "number"
                },
                "cpusSidecar": {
                    "type": "number"
                },
                "mem": {
                    "title": "Memory size (MB)",
                    "description": "Template pod mem requirements (in MB)",
                    "type": "integer"
                },
                "memSidecar": {
                    "type": "integer"
                },
                "disk": {
                    "title": "Disk size (MB)",
                    "description": "Template pod persistent disk requirements (in MB)",
                    "type": "integer"
                },
                "ports":{
                    "type": "string"
                },
                "autocert": {
                    "type": "string"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "secret": {
                                "type": "string"
                            },
                            "file": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "labels": {
                                "type": "string"
                            },
                            "index": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "env": {
                    "type": "array",
                    "description": "Environment variables to pass through to the loadbalancer",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "description": "The name of the environment variable",
                                "type": "string"
                            },
                            "value": {
                                "description": "The value of the environment variable",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "required":[
                "cpus",
                "mem",
                "disk",
                "count"
            ]
        },
        "variables": {
            "type":"object",
            "properties":{
                "secrets": {
                    "type": "string",
                    "default": "secrets"
                },
                "envfile": {
                    "type": "string",
                    "default": "envfile"
                }
            }
        }
    }
}
