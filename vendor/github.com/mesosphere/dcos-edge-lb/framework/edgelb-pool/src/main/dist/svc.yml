name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
pods:
  edgelb-pool:
    # Secrets are configured in java
    # Ports are configured in java

    # pre-reserved-role must have quotes because yaml doesn't allow asterisk
    # without quotes. And "*" is the default role.
    pre-reserved-role: "{{POOL_RESERVED_ROLE}}"

    count: {{POOL_COUNT}}
    placement: {{POOL_CONSTRAINTS}}
    image: {{POOL_IMAGE}}
    volume:
      path: {{POOL_RELATIVE_VOLUME_PATH}}
      type: ROOT
      size: {{POOL_DISK}}
    resource-sets:
      server-resources:
        cpus: {{POOL_CPUS}}
        memory: {{POOL_MEM}}
      sidecar-resources:
        cpus: {{POOL_SIDECAR_CPUS}}
        memory: {{POOL_SIDECAR_MEM}}
    tasks:
      server:
        goal: RUNNING
        cmd: >
          export SERVICE_DIR="$MESOS_SANDBOX/{{POOL_RELATIVE_VOLUME_PATH}}/service" &&
          export LBMGR_DIR="$MESOS_SANDBOX/{{POOL_RELATIVE_VOLUME_PATH}}/lbmgr" &&
          export SECRETS_RELATIVE_PATH={{POOL_SECRETS_RELATIVE_PATH}} &&
          export ENVFILE_RELATIVE_PATH={{POOL_ENVFILE_RELATIVE_PATH}} &&
          export SECRETS_DIR="$MESOS_SANDBOX/$SECRETS_RELATIVE_PATH" &&
          export ENVFILE_DIR="$MESOS_SANDBOX/$ENVFILE_RELATIVE_PATH" &&
          /dcosfiles/haproxy/bin/run
        resource-set: server-resources
        env:
          PORTS: {{POOL_PORTS}}
          AUTOCERT: {{POOL_AUTOCERT}}
          ELB_POOL_NAME: {{POOL_NAME}}
        health-check:
          cmd: $LBWORKDIR/haproxy/bin/lbmgr healthcheck
          grace-period: 180
          interval: 1
          max-consecutive-failures: 5
          delay: 0
          timeout: 10
      sidecar:
        goal: FINISHED
        cmd: >
          export SERVICE_DIR=$MESOS_SANDBOX/{{POOL_RELATIVE_VOLUME_PATH}}/service &&
          /dcosfiles/haproxy/bin/sidecar
        resource-set: sidecar-resources
plans:
  # All plans contain the sidecar phase. This is so every plan will run
  # the phase to completion.
  deploy:
    # We don't actually need the sidecar phase as a part of this plan in
    # order to function. The purpose is actually to impose ordering on
    # when the sidecar phase may run. A sidecar may crash and cause
    # other failures if it's run before the primary task is up. Having
    # the sidecar as the second phase of a serial strategy will prevent
    # this error condition.
    #
    # The APIS will re-run the sidecar phase. Since it's a phase as a part
    # of a serial plan, it won't run until the first phase is complete even
    # if it is started before the plan is complete.
    strategy: serial
    phases:
      edgelb-pool-deploy:
        strategy: parallel
        pod: edgelb-pool
        steps:
          - default: [[server]]
      sidecar-deploy:
        # Parallel strategy because we don't want to block the sidecar of
        # one pod if another is stuck.
        strategy: parallel
        pod: edgelb-pool
        steps:
          - default: [[sidecar]]
  update:
    # Since the primary task is already deployed, we can run the phases
    # in parallel as there's no chance of the sidecar running before
    # the primary task.
    strategy: parallel
    phases:
      edgelb-pool-deploy:
        # Serial strategy because we want to maintain availability while
        # this update is occurring.
        strategy: serial
        pod: edgelb-pool
        steps:
          - default: [[server]]
      sidecar-deploy:
        # This is a clone of the sidecar phase from the deploy plan.
        strategy: parallel
        pod: edgelb-pool
        steps:
          - default: [[sidecar]]
