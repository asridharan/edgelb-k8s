// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/mesosphere/dcos-edge-lb/apiserver/models"
)

// NewV1CreateLoadBalancerPoolParams creates a new V1CreateLoadBalancerPoolParams object
// with the default values initialized.
func NewV1CreateLoadBalancerPoolParams() *V1CreateLoadBalancerPoolParams {
	var ()
	return &V1CreateLoadBalancerPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1CreateLoadBalancerPoolParamsWithTimeout creates a new V1CreateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1CreateLoadBalancerPoolParamsWithTimeout(timeout time.Duration) *V1CreateLoadBalancerPoolParams {
	var ()
	return &V1CreateLoadBalancerPoolParams{

		timeout: timeout,
	}
}

// NewV1CreateLoadBalancerPoolParamsWithContext creates a new V1CreateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1CreateLoadBalancerPoolParamsWithContext(ctx context.Context) *V1CreateLoadBalancerPoolParams {
	var ()
	return &V1CreateLoadBalancerPoolParams{

		Context: ctx,
	}
}

// NewV1CreateLoadBalancerPoolParamsWithHTTPClient creates a new V1CreateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1CreateLoadBalancerPoolParamsWithHTTPClient(client *http.Client) *V1CreateLoadBalancerPoolParams {
	var ()
	return &V1CreateLoadBalancerPoolParams{
		HTTPClient: client,
	}
}

/*V1CreateLoadBalancerPoolParams contains all the parameters to send to the API endpoint
for the v1 create load balancer pool operation typically these are written to a http.Request
*/
type V1CreateLoadBalancerPoolParams struct {

	/*LoadBalancer*/
	LoadBalancer *models.V1Pool
	/*Token
	  DCOS Auth Token

	*/
	Token *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) WithTimeout(timeout time.Duration) *V1CreateLoadBalancerPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) WithContext(ctx context.Context) *V1CreateLoadBalancerPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) WithHTTPClient(client *http.Client) *V1CreateLoadBalancerPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLoadBalancer adds the loadBalancer to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) WithLoadBalancer(loadBalancer *models.V1Pool) *V1CreateLoadBalancerPoolParams {
	o.SetLoadBalancer(loadBalancer)
	return o
}

// SetLoadBalancer adds the loadBalancer to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) SetLoadBalancer(loadBalancer *models.V1Pool) {
	o.LoadBalancer = loadBalancer
}

// WithToken adds the token to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) WithToken(token *string) *V1CreateLoadBalancerPoolParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the v1 create load balancer pool params
func (o *V1CreateLoadBalancerPoolParams) SetToken(token *string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *V1CreateLoadBalancerPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LoadBalancer == nil {
		o.LoadBalancer = new(models.V1Pool)
	}

	if err := r.SetBodyParam(o.LoadBalancer); err != nil {
		return err
	}

	if o.Token != nil {

		// query param token
		var qrToken string
		if o.Token != nil {
			qrToken = *o.Token
		}
		qToken := qrToken
		if qToken != "" {
			if err := r.SetQueryParam("token", qToken); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
